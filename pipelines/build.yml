# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
# vmImage: 'windows-latest'

trigger:
- main

# top level is the Stage - contains jobs
stages:
- stage: Build
  displayName: Build C# project
  pool:
    name: Default
 
# define some variables for use later on
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
    jimVar1: 'hello'

  jobs:
# jobs contain steps
  - job: Build
    displayName: Build
    steps:
# steps can be tasks, scripts, etc
    - script: echo Build step 1

#   checkout our project
    - checkout: self
      clean: true

#   select the version of ASP.NET to use. We use version 6.0.x
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: 'sdk'
        version: '5.0.x'
        includePreviewVersions: true

    - task: NuGetToolInstaller@1

#   download the Nuget packages that our project needs
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: ' /p:custom_build_environment=azure'
        noCache: true

- stage: Unit_Tests
  displayName: Unit Tests
  pool:
    name: Default

  jobs:
  - job: test
    displayName: Unit Tests
    steps:

    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: 'sdk'
        version: '5.0.x'
        includePreviewVersions: true
          
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: Unit Tests
      inputs:
        command: test
        projects: '**/*.Tests.csproj'
        publishTestResults: true
        arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
        #arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:custom_build_environment=azure'
        noCache: true
          
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage results'
      inputs:
        codeCoverageTool: 'Cobertura'
        #summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.cobertura.xml' 
        summaryFileLocation: '$(Agent.TempDirectory)/**/*overage.cobertura.xml' 
        #summaryFileLocation: '**/*coverage.cobertura.xml' 

- stage: B
  pool:
    name: Default
  jobs:
  - job: B1
    steps:
    - script: echo step   B1

